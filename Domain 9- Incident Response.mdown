# Domain 9: Incident Response

## Introduction

Incident Response (IR) is a critical facet of any information security program. Preventive security controls have proven unable to completely eliminate the possibility of a compromise of critical data. Most organizations have some sort of IR plan to govern how they will investigate an attack, but with the distinct differences in both access to forensic data and governance in the cloud, organizations must consider how their IR processes will change. 

This domain seeks to identify those gaps pertinent to IR that are created by the unique characteristics of cloud computing.  Security professionals may use this as a reference when developing response plans and conducting other activities during the preparation phase of the IR lifecycle. This domain is organized in accord with the commonly accepted Incident Response Lifecycle as described in the National Institute of Standards and Technology Computer Security Incident Handling Guide (NIST 800-61) [1].   

After describing the Incident Response Lifecycle, as described in NIST 800-61, each subsequent section addresses a phase of the lifecycle and explores the potential considerations for responders as the work in a cloud environment.  

## Overview

### Incident Response Lifecycle

NIST 800-61

* Preparation:"Establishing an incident response capability so that the organization is ready to respond to incidents"
	* Process to handle the incidents
	* Handler Communications and Facilities
	* Incident Analysis Hardware and Software
	* Internal Documentation (Port lists, Asset Lists, Network diagrams, current baselines of network traffic)
	
* Detection & Analysis
	* Alerts (Endpoint Protection, Network Security Monitoring, Host Monitoring, Account Creation, Privilege Escalation, other indicators of compromise, SIEM, Security Analytics (baseline and anomaly detection))
	* Validating alert (reducing false positives) and escalation 
	* Building a timeline of the attack
	* Determining the extent of the potential data loss
	* Documenting the incident and gathering evidence (chain of custody)
	
* Containment, Eradication & Recovery
	* Containment: Taking systems offline. Considerations for data loss versus service availability. Ensuring systems don't destroy themselves upon detection.
	* Eradication & Recovery: Clean up compromised devices and restore systems to normal operation. Confirm systems are functioning properly, deploy controls to prevent similar incidents.
	
* Post-mortem
	* What could have been done better? Could the attack have been detected sooner? What additional data would have been helpful to isolate the attack faster? Does the IR process need to change? If so, how?

	
### How the cloud impacts I/R

* Preparation
	* SLAs and Governance: What does your organization do? What is the CSP responsible for? Points of contact? Response time expectations? Escalation procedures? Out of band communication procedures (in case networks are impacted)? How do the hand-offs work? What data are you going to have access to?
		* Testing the process with the CSP. Making sure escalations and roles/responsibilities are clear.
		* Ensuring the CSP has contacts to notify you of incidents they detect, and that is integrated into your process. 
		* Ensure you have contacts, including out of band, for your CSP and you test them.
	* IaaS/PaaS vs. SaaS: In a multi-tenant environment, how can data specific to your cloud be provided for investigation?
	* "Cloud jump kit:" Tools needed to investigate in a remote location (like cloud-based resources).
	* Architecting cloud environment for faster detection, investigation and response (containment and recoverability
		* Instrumentation (pull telemetry from every layer of the technology stack)
		* Isolation to ensure attacks cannot spread and compromise the entire application.
		* Immutable servers: If an issue is detected, move workloads from compromised device onto a new instance in a known-good state. Greater focus on file integrity monitoring and configuration management.
		* Application stack maps to understand where data is going to reside to factor in geographic differences in monitoring and data capture.
* Detection and Analysis
	* Monitoring as a Service provides alerts that can kick off an automated I/R workflow. 
		* Offered by some cloud providers for their platform, and some third-party monitoring options are available.
		* Increasingly available in IaaS and some PaaS, but not common with SaaS.
	* Cloud platform logs, which may be integrated into existing security operations/monitoring.
		* Not available on all providers. Again, tend to see more with IaaS and PaaS than SaaS.
	* Differences in IaaS and PaaS/SaaS: Who (your organization or the CSP) is responsible to do the detection? Understanding the operational realities of having to work with the CSP to do a full investigation.
	* Cloud console as a means to identify environment/configuration changes.
	
* Data Sources
	* Cloud platform logs may be an option, but not universally available. Should show all management-plane activity.
		* Understand what is logged and the gaps that could affect incident analysis.
		* Providers may have other logs available in a serious incident that are not normally available to customers.
	* Limited network visibility (flow records in some instances, no full packet capture)
		* What can be provided by the CSP? 
	* Instrument the technology stack (within instances, servers, and application code) to gain telemetry important for the investigation. 
	* Pay particular attention to PaaS and serverless application architectures. You will likely need to add custom application level logging.
	* External threat intelligence (to help identify indicators of compromise and get adversary information)
	* Potential challenges to whether information provided by a CSP will survive chain of custody questions. No precedents established at this point. 
	* Key questions to ask (From Guidance 3.0.1 - page 98)
	
* Forensic and Investigative Support
	* Factor what the CSP can provide and whether it adhere's to the chain of custody
	* Need to automate many of the forensic/investigation processes because of the dynamic nature of the cloud. Infrastructure expands and contracts, which complicates I/R.
		* Instant snapshots of storage
		* Capture meta data at the time of alert, so the analysis can happen based on what the infrastructure looked like at that time.
	* Determine the extent of the potential compromise
		* Analyze network flows to check if network isolation held up
		* Configuration data to check if other instances have been similarly attacked
		* Data access logs (if available) and login/identity information for cloud platform breaches
		* Serverless and PaaS- based architectures will require correlation across platform and application logs
		* Meta-data from cloud console can provide clues as to type of instance, application ownership, and vulnerabilities that could affect other components, data, and instances in the cloud
	
* Containment, Eradication and Recovery
	* Threat modeling/tabletop exercise to determine the most effective means of containment for different types of attacks on different components in the cloud stack
		* Differences in what you can do in SaaS, PaaS, and IaaS.
	* Always start by ensuring the cloud management plane/metastructure is free of an attacker
		* You can't contain an attack if the attacker is still in the management plane.
	* Cloud provides a lot more flexibility in this phase of the response (mostly for IaaS)
		* Software defined infrastructure (using templates to build out the entire stack) allow you to quickly rebuild from scratch in a clean environment. 
		* Instant quarantine (just move the instance out of the compute group and replace it)
		* No need to "eradicate" the attacker, since the new infrastructure/instances are clean
			* Still need to ensure the vulnerability they used to get in is closed
		* Environment automatically heals (if architected correctly)
		* Ensure the "recipe" for new infrastructure/applications has not been compromised
	* With SaaS and some PaaS you may be very limited and will need to rely more on the cloud provider.
	
	* Post-mortem
		* Work with internal response team and provider to figure what worked, what didn't and pinpoint areas for improvement
		* Isolate limitations in the data collected and figure out how to address the issues moving forward.
		* Hard to change SLAs, but if the agreed upon response time wasn't sufficient, go back and try to renegotiate.
	
#Recommendations

* SLAs and setting expectations around what the customer does versus what the provider does is the most important aspect of I/R for cloud-based resources. Clear communication of roles/responsibilities and practicing the response and hand-offs are critical.
* Cloud customers must set up proper communication paths with the CSP that can be utilized in the event of an incident.  Existing open standards can facilitate incident communication.  
* Cloud customers must understand the content and format of data the CSP will supply for analysis purposes and be evaluated whether the available forensics data satisfies legal chain of custody requirements. 
* Cloud customers should embrace continuous and serverless monitoring of cloud-based resources to detect potential issues earlier than in traditional data centers.
* Cloud-based applications should leverage automation and orchestration to streamline and accelerate the response, including containment and recovery. 
* For each cloud-service provider that is used, the approach to detecting and handling incidents involving resources hosted at that provider must be planned and described in the enterprise incident response plan.
* The SLA of each cloud-service provider that is used must guarantee the support for incident handling required for effective execution of the enterprise incident response plan for each stage of the incident handling process: detection, analysis, containment, eradication, and recovery.
* Testing will be conducted at least annually or whenever there are significant changes to the application architecture. Customers should seek to integrate their testing procedures with that of their provider (and other partners) to the greatest extent possible.



